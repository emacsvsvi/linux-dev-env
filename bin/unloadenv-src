#!/bin/bash

function syntax()
{
    echo -e "\E[34m***********************"
    echo "    Unset all of the variables in a project file."
    echo ""
    echo "    unloadenv <project name/short name>"
    echo "***********************"
    echo ""
    tput sgr0
}

while getopts "h" OPTION
do
     case $OPTION in
         ?)
             syntax
             exit 1
             ;;
     esac
done

CURR_IFS=${IFS}

if [ -f ${DEV_HOME}/dev-env/env/projects/home/$1} ]; then
    IFS=
    for x in `grep pathadd ${DEV_HOME}/dev-env/env/projects/home/$1`;do eval `echo $x | sed 's/pathadd/pathrm/'`; done
    IFS=" "
    unset `grep export ${DEV_HOME}/dev-env/env/projects/home/$1 | awk '{print $2}' | awk 'BEGIN { FS = "=" } ; {print $1}' | xargs`
    IFS=${CURR_IFS}
fi

if [ -f ${DEV_HOME}/dev-env/env/projects/$1 ]; then
    IFS=
    for x in `grep pathadd ${DEV_HOME}/dev-env/env/projects/$1`;do eval `echo $x | sed 's/pathadd/pathrm/'`; done
    IFS=" "
    unset `grep export ${DEV_HOME}/dev-env/env/projects/$1 | awk '{print $2}' | awk 'BEGIN { FS = "=" } ; {print $1}' | xargs`
    IFS=${CURR_IFS}
fi

export IFS=${CURR_IFS}
PS1="$(printf "%$((COLUMNS-1))s\r")[\u@\h($PROJECT_NAME) \w]\n\$ "
